{"version":3,"sources":["..\\..\\..\\..\\..\\..\\assets\\Script\\Scene\\Play/assets\\Script\\Scene\\Play\\NodeTimer.js"],"names":["BaseNodeTimer","require","cc","Class","extends","properties","colorFont","default","Color","WHITE","type","callBack","get","_callBack","set","value","startTimer","sec","secEnd","Date","getTime","tempTime","isRun","labelTime","string","getTimeString","schedule","stepSec","setColor","time","unschedule","labelTimeMill","RED","color","node","update","dt","prependZero","toFixed","stop"],"mappings":";;;;;;AAAA,IAAIA,gBAAgBC,QAAQ,eAAR,CAApB;AACAC,GAAGC,KAAH,CAAS;AACLC,aAASJ,aADJ;;AAGLK,gBAAY;AACRC,mBAAU;AACNC,qBAASL,GAAGM,KAAH,CAASC,KADZ;AAENC,kBAAMR,GAAGM;AAFH,SADF;;AAMRG,kBAAS;AACLC,eADK,iBACA;AAAO,uBAAO,KAAKC,SAAZ;AAAuB,aAD9B;AAELC,eAFK,eAEDC,KAFC,EAEK;AAAE,qBAAKF,SAAL,GAAiBE,KAAjB;AAAwB;AAF/B;AAND,KAHP;;AAeLC,cAfK,sBAeMC,GAfN,EAe4B;AAAA,YAAjBN,QAAiB,uEAAN,IAAM;;AAC7B,aAAKA,QAAL,GAAgBA,QAAhB;;AAEAM;;AAEA,aAAKC,MAAL,GAAe,IAAIC,IAAJ,GAAWC,OAAX,KAAuB,IAAxB,GAAgCH,GAA9C;AACA,aAAKI,QAAL,GAAgB,GAAhB;AACA,aAAKC,KAAL,GAAa,IAAb;;AAEA,aAAKC,SAAL,CAAeC,MAAf,GAAwB,KAAKC,aAAL,CAAmBR,GAAnB,CAAxB;AACA,aAAKS,QAAL,CAAc,KAAKC,OAAnB,EAA6B,CAA7B;;AAEA,aAAKC,QAAL,CAAc,KAAKtB,SAAnB;AACH,KA5BI;AA8BLqB,WA9BK,qBA8BK;AACN,YAAIE,OAAO,KAAKX,MAAL,GAAe,IAAIC,IAAJ,GAAWC,OAAX,KAAuB,IAAjD;AACA,aAAKC,QAAL,GAAgB,GAAhB;;AAEA,YAAIQ,OAAO,CAAC,GAAZ,EAAiB;AACb,iBAAKC,UAAL,CAAgB,KAAKH,OAArB;AACA,iBAAKL,KAAL,GAAa,KAAb;;AAEA,iBAAKS,aAAL,CAAmBP,MAAnB,GAA4B,IAA5B;;AAEA,gBAAG,KAAKb,QAAL,KAAgB,IAAnB,EAAwB,KAAKA,QAAL;;AAExB;AACH,SATD,MASO;AACH,iBAAKY,SAAL,CAAeC,MAAf,GAAwB,KAAKC,aAAL,CAAmBI,IAAnB,CAAxB;AACH;;AAED,YAAGA,QAAQ,GAAX,EAAgB,KAAKD,QAAL,CAAc1B,GAAGM,KAAH,CAASwB,GAAvB,EAAhB,KACK,KAAKJ,QAAL,CAAc,KAAKtB,SAAnB;AAER,KAlDI;AAoDLsB,YApDK,oBAoDIK,KApDJ,EAoDU;AACX,aAAKF,aAAL,CAAmBG,IAAnB,CAAwBD,KAAxB,GAAgCA,KAAhC;AACA,aAAKV,SAAL,CAAeW,IAAf,CAAoBD,KAApB,GAA4BA,KAA5B;AACH,KAvDI;AAyDLE,UAzDK,kBAyDEC,EAzDF,EAyDM;AACP,YAAI,CAAC,KAAKd,KAAV,EAAiB;;AAEjB,YAAI,KAAKD,QAAL,IAAiB,CAArB,EAAwB;AACpB,iBAAKA,QAAL,GAAgB,CAAhB;AACH;AACD,aAAKU,aAAL,CAAmBP,MAAnB,GAA4B,KAAKa,WAAL,CAAiB,KAAKhB,QAAL,CAAciB,OAAd,CAAsB,CAAtB,CAAjB,EAA0C,CAA1C,CAA5B;AACA,aAAKjB,QAAL,IAAiB,MAAMe,EAAvB;AACH,KAjEI;AAoELG,QApEK,kBAoEC;AACF,aAAKT,UAAL,CAAgB,KAAKH,OAArB;AACA,aAAKL,KAAL,GAAa,KAAb;;AAEA,YAAI,KAAKD,QAAL,IAAiB,CAArB,EAAwB;AACpB,iBAAKA,QAAL,GAAgB,CAAhB;AACH;AACJ;AA3EI,CAAT","file":"NodeTimer.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\Script\\Scene\\Play","sourcesContent":["var BaseNodeTimer = require('BaseNodeTimer');\r\ncc.Class({\r\n    extends: BaseNodeTimer,\r\n\r\n    properties: {\r\n        colorFont:{\r\n            default: cc.Color.WHITE,\r\n            type: cc.Color,\r\n        },\r\n        \r\n        callBack:{\r\n            get(){      return this._callBack;},\r\n            set(value){ this._callBack = value;}\r\n        },\r\n    },\r\n\r\n    startTimer(sec, callBack = null) {\r\n        this.callBack = callBack;\r\n        \r\n        sec--;\r\n\r\n        this.secEnd = (new Date().getTime() / 1000) + sec;\r\n        this.tempTime = 100;\r\n        this.isRun = true;\r\n\r\n        this.labelTime.string = this.getTimeString(sec);\r\n        this.schedule(this.stepSec,  1);\r\n        \r\n        this.setColor(this.colorFont);\r\n    },\r\n\r\n    stepSec() {\r\n        var time = this.secEnd - (new Date().getTime() / 1000);\r\n        this.tempTime = 100;\r\n\r\n        if (time < -0.5) {\r\n            this.unschedule(this.stepSec);\r\n            this.isRun = false;\r\n\r\n            this.labelTimeMill.string = '00';\r\n\r\n            if(this.callBack!==null)this.callBack();\r\n            \r\n            return;\r\n        } else {\r\n            this.labelTime.string = this.getTimeString(time);\r\n        }\r\n\r\n        if(time <= 4.5) this.setColor(cc.Color.RED);\r\n        else this.setColor(this.colorFont); \r\n        \r\n    },\r\n    \r\n    setColor(color){\r\n        this.labelTimeMill.node.color = color;\r\n        this.labelTime.node.color = color;\r\n    },\r\n\r\n    update(dt) {\r\n        if (!this.isRun) return;\r\n\r\n        if (this.tempTime <= 0) {\r\n            this.tempTime = 0;\r\n        } \r\n        this.labelTimeMill.string = this.prependZero(this.tempTime.toFixed(0),2);\r\n        this.tempTime -= 100 * dt;\r\n    },\r\n\r\n\r\n    stop(){\r\n        this.unschedule(this.stepSec);\r\n        this.isRun = false;\r\n\r\n        if (this.tempTime <= 0) {\r\n            this.tempTime = 0;\r\n        } \r\n    },\r\n\r\n});\r\n"]}