{"version":3,"sources":["..\\..\\..\\..\\..\\..\\assets\\Script\\Scene\\Play/assets\\Script\\Scene\\Play\\ScenePlay.js"],"names":["BaseCard","require","NodeTimer","NodeTimerUp","NodeCounter","BaseScene","cc","Class","extends","properties","prefabCard0","Prefab","nodeTimer","nodeTimerUp","nodeCounter","nodeRootCard","Node","start","isLock","cardOpen","X","Y","array","dataGet","shuffle","createArray","GAP","count","halfX","Math","floor","halfY","i","baseCard","self","arrayCards","y","x","nodeCard0","instantiate","addChild","setPosition","p","setScale","getComponent","push","index","open","callBackEnd","stop","sec","timeTemp","alert","sceneIntro","startCounter","length","close","startTimer","a","j","random","size","same","result"],"mappings":"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","file":"ScenePlay.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\Script\\Scene\\Play","sourcesContent":["var BaseCard = require('BaseCard');\r\nvar NodeTimer = require('NodeTimer');\r\nvar NodeTimerUp = require('NodeTimerUp');\r\nvar NodeCounter = require('NodeCounter');\r\nvar BaseScene = require('BaseScene');\r\ncc.Class({\r\n    extends: BaseScene,\r\n\r\n    properties: {\r\n        prefabCard0:cc.Prefab,\r\n        nodeTimer:NodeTimer,\r\n        nodeTimerUp:NodeTimerUp,\r\n        nodeCounter:NodeCounter,\r\n        nodeRootCard:cc.Node,\r\n    },\r\n\r\n\r\n    start () {\r\n        BaseCard.isLock = false;\r\n        BaseCard.cardOpen = null;\r\n\r\n        var X;\r\n        var Y;\r\n        var array;\r\n        switch(BaseScene.dataGet['mode']){\r\n            case 0:{\r\n                X = 4;\r\n                Y = 4;\r\n                array = this.shuffle(this.createArray(8,2));\r\n                break;\r\n            }\r\n            case 1:{\r\n                X = 6;\r\n                Y = 4;\r\n                array = this.shuffle(this.createArray(6,4));\r\n                break;\r\n            }\r\n            case 2:{\r\n                X = 8;\r\n                Y = 8;\r\n                array = this.shuffle(this.createArray(8,8));\r\n                break;\r\n            }\r\n            default:{\r\n                X = 4;\r\n                Y = 4;\r\n                array = this.shuffle(this.createArray(8,2));\r\n                break;\r\n            }\r\n        }\r\n\r\n        \r\n        var GAP = 100;\r\n        BaseCard.count = X * Y;\r\n\r\n        var halfX;\r\n        if(X%2===0) halfX = -GAP*((X/2)-0.5);\r\n        else halfX = -GAP*Math.floor(X/2);\r\n    \r\n        var halfY;\r\n        if(Y%2===0) halfY = -GAP*((Y/2)-0.5);\r\n        else halfY = -GAP*Math.floor(Y/2);\r\n        \r\n        var i = 0;\r\n        var baseCard; \r\n        var self = this;\r\n        var arrayCards = [];\r\n        for(var y=0;y<Y;y++){\r\n            for(var x=0;x<X;x++){\r\n                var nodeCard0 = cc.instantiate(this.prefabCard0);\r\n                this.nodeRootCard.addChild(nodeCard0);\r\n                nodeCard0.setPosition(cc.p(halfX+(GAP*x),halfY+(GAP*y)));\r\n                nodeCard0.setScale(0.25);\r\n                baseCard = nodeCard0.getComponent(BaseCard);\r\n                arrayCards.push(baseCard);\r\n                baseCard.index = array[i]; \r\n                baseCard.open();\r\n                baseCard.callBackEnd = function(){\r\n                    BaseCard.count--;\r\n                    if(BaseCard.count === 0){\r\n                        self.nodeTimer.stop();\r\n                        self.nodeTimerUp.stop(function(sec,timeTemp){\r\n                            alert(sec + ':' + timeTemp);\r\n                            self.sceneIntro();\r\n                        }); \r\n                    }\r\n                }\r\n                i++;\r\n            }\r\n        }\r\n\r\n        this.nodeCounter.startCounter(function(){\r\n            for(var i=0;i<arrayCards.length;i++){\r\n                arrayCards[i].close();\r\n            }\r\n\r\n\r\n            self.nodeTimer.startTimer(300,function(){\r\n                alert('time over');\r\n            });\r\n    \r\n            self.nodeTimerUp.startTimer();\r\n        });\r\n    },\r\n\r\n    shuffle(a) {\r\n        var j, x, i;\r\n        for (i = a.length; i; i -= 1) {\r\n            j = Math.floor(Math.random() * i);\r\n            x = a[i - 1];\r\n            a[i - 1] = a[j];\r\n            a[j] = x;\r\n        }\r\n\r\n        return a;\r\n    },\r\n\r\n    createArray(size,same){\r\n        var result = [];\r\n\r\n        for(var i=0;i<size;i++){\r\n            for(var j=0;j<same;j++){\r\n                result.push(i);\r\n            }\r\n        }\r\n\r\n        return result;\r\n    },\r\n});\r\n"]}