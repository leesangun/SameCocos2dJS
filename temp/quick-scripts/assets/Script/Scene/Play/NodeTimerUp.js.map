{"version":3,"sources":["NodeTimerUp.js"],"names":["BaseNodeTimer","require","cc","Class","extends","properties","startTimer","tempTime","isRun","secEnd","Date","getTime","labelTime","string","getTimeString","schedule","stepSec","getSec","update","dt","labelTimeMill","prependZero","toFixed","stop","callBack","unschedule","node","runAction","sequence","delayTime","callFunc","sec","Math","floor","secM"],"mappings":";;;;;;AAAA,IAAIA,gBAAgBC,QAAQ,eAAR,CAApB;AACAC,GAAGC,KAAH,CAAS;AACLC,aAASJ,aADJ;;AAGLK,gBAAY,EAHP;;AAOLC,cAPK,wBAOQ;AACT,aAAKC,QAAL,GAAgB,CAAhB;AACA,aAAKC,KAAL,GAAa,IAAb;;AAEA,aAAKC,MAAL,GAAe,IAAIC,IAAJ,GAAWC,OAAX,KAAuB,IAAtC;;AAEA,aAAKC,SAAL,CAAeC,MAAf,GAAwB,KAAKC,aAAL,CAAmB,CAAnB,CAAxB;AACA,aAAKC,QAAL,CAAc,KAAKC,OAAnB,EAA6B,CAA7B;AAEH,KAhBI;AAkBLA,WAlBK,qBAkBK;AACN,aAAKT,QAAL,GAAgB,CAAhB;AACA,aAAKK,SAAL,CAAeC,MAAf,GAAwB,KAAKC,aAAL,CAAmB,KAAKG,MAAL,EAAnB,CAAxB;AAEH,KAtBI;AAwBLC,UAxBK,kBAwBEC,EAxBF,EAwBM;AACP,YAAI,CAAC,KAAKX,KAAV,EAAiB;;AAEjB,YAAI,KAAKD,QAAL,IAAiB,GAArB,EAA0B;AACtB,iBAAKA,QAAL,GAAgB,EAAhB;AACH;AACD,aAAKa,aAAL,CAAmBP,MAAnB,GAA4B,KAAKQ,WAAL,CAAiB,KAAKd,QAAL,CAAce,OAAd,CAAsB,CAAtB,CAAjB,EAA0C,CAA1C,CAA5B;;AAEA,aAAKf,QAAL,IAAiB,MAAMY,EAAvB;AACH,KAjCI;AAoCLI,QApCK,gBAoCAC,QApCA,EAoCS;AACV,aAAKC,UAAL,CAAgB,KAAKT,OAArB;AACA,aAAKR,KAAL,GAAa,KAAb;;AAEA,aAAKkB,IAAL,CAAUC,SAAV,CACIzB,GAAG0B,QAAH,CACI1B,GAAG2B,SAAH,CAAa,GAAb,CADJ,EAEI3B,GAAG4B,QAAH,CACI,YAAU;AACN,gBAAI,KAAKvB,QAAL,IAAiB,GAArB,EAA0B;AACtB,qBAAKA,QAAL,GAAgB,EAAhB;AACH;AACD,gBAAIwB,MAAMC,KAAKC,KAAL,CAAW,KAAKhB,MAAL,EAAX,CAAV;AACA,gBAAIiB,OAAOF,KAAKC,KAAL,CAAW,KAAK1B,QAAhB,CAAX;AACA,iBAAKK,SAAL,CAAeC,MAAf,GAAwB,KAAKC,aAAL,CAAmBiB,GAAnB,CAAxB;AACA,iBAAKX,aAAL,CAAmBP,MAAnB,GAA4B,KAAKQ,WAAL,CAAiBa,KAAKZ,OAAL,CAAa,CAAb,CAAjB,EAAiC,CAAjC,CAA5B;;AAEAE,qBAASO,GAAT,EAAcG,IAAd;AACH,SAXL,EAYI,IAZJ,CAFJ,CADJ;AAmBH,KA3DI;AA6DLjB,UA7DK,oBA6DG;AACJ,eAAQ,IAAIP,IAAJ,GAAWC,OAAX,KAAuB,IAAxB,GAAgC,KAAKF,MAA5C;AACH;AA/DI,CAAT","file":"NodeTimerUp.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\Script\\Scene\\Play","sourcesContent":["var BaseNodeTimer = require('BaseNodeTimer');\r\ncc.Class({\r\n    extends: BaseNodeTimer,\r\n\r\n    properties: {\r\n\r\n    },\r\n\r\n    startTimer() {\r\n        this.tempTime = 0;\r\n        this.isRun = true;\r\n\r\n        this.secEnd = (new Date().getTime() / 1000);\r\n\r\n        this.labelTime.string = this.getTimeString(0);\r\n        this.schedule(this.stepSec,  1);\r\n\r\n    },\r\n\r\n    stepSec() {\r\n        this.tempTime = 0;\r\n        this.labelTime.string = this.getTimeString(this.getSec());\r\n        \r\n    },\r\n\r\n    update(dt) {\r\n        if (!this.isRun) return;\r\n\r\n        if (this.tempTime >= 100) {\r\n            this.tempTime = 99;\r\n        } \r\n        this.labelTimeMill.string = this.prependZero(this.tempTime.toFixed(0),2);\r\n\r\n        this.tempTime += 100 * dt;\r\n    },\r\n\r\n    \r\n    stop(callBack){\r\n        this.unschedule(this.stepSec);\r\n        this.isRun = false;\r\n        \r\n        this.node.runAction(\r\n            cc.sequence(\r\n                cc.delayTime(0.5),\r\n                cc.callFunc(\r\n                    function(){\r\n                        if (this.tempTime >= 100) {\r\n                            this.tempTime = 99;\r\n                        } \r\n                        var sec = Math.floor(this.getSec());\r\n                        var secM = Math.floor(this.tempTime);\r\n                        this.labelTime.string = this.getTimeString(sec);\r\n                        this.labelTimeMill.string = this.prependZero(secM.toFixed(0),2);\r\n                \r\n                        callBack(sec, secM);\r\n                    },\r\n                    this\r\n                )\r\n            )\r\n        );\r\n    },\r\n\r\n    getSec(){\r\n        return (new Date().getTime() / 1000) - this.secEnd;\r\n    },\r\n\r\n});\r\n"]}